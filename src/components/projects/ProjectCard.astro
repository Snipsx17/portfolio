---
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@components/ui/card';
import { Badge } from '@components/ui/badge';
const lang = Astro.url.pathname.split('/')[1] || 'en';
import { getTranslation } from '../../utils/i18n';
import { Button } from '@components/ui/button';
import { Github, Send } from 'lucide-react';

interface Props {
  title: string;
  description: string;
  image: string;
  git: string;
  url: string;
  stack: string;
}

const { title, description, image, git, url, stack } = Astro.props;
---

<Card>
  <CardHeader>
    <img src={image} alt={title} class="mb-3 rounded-md h-[180px]" />
    <CardTitle className="font-header text-4xl">{title}</CardTitle>
  </CardHeader>
  <CardContent className="max-h-44 min-h-44 px-6 py-0">
    <div class="overflow-hidden">
      <p class="mb-4 text-3xl line-clamp-2">{description}</p>
    </div>
    <small class="font-p font-semibold">Stack:</small>
    <div class="flex gap-2 mt-2">
      {
        stack.split(',').map((tec) => (
          <Badge variant={'secondary'} className="text-lg">
            {tec}
          </Badge>
        ))
      }
    </div>
  </CardContent>

  <CardFooter
    className=" grid grid-cols-2 gap-4 content-center justify-items-center pt-6"
  >
    <Button variant={'link'} size={'lg'} asChild>
      <a
        href={url}
        class="w-full bg-black text-white text-center p-4 rounded-lg text-2xl font-p hover:scale-105 transition-transform duration-300"
        ><Github size="15" className="inline" />
        {getTranslation(lang, 'code')} Code</a
      >
    </Button>
    <Button variant={'link'} size={'lg'} asChild>
      <a
        href={url}
        class="w-full border border-black text-center p-4 rounded-lg text-2xl font-p hover:scale-105 transition-transform duration-300"
      >
        <Send size="15" className="inline" />
        {getTranslation(lang, 'preview')}
      </a>
    </Button>
  </CardFooter>
</Card>
